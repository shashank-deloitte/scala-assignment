<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="46873323-de5a-472f-9479-fd43c87d5baa" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_github_tototoshi_scala_csv_3_1_3_10_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__com_typesafe_config_1_3_3_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_modules_scala_xml_3_2_1_0_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala3_library_3_3_2_2_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scala_lang_scala_library_2_13_10_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalactic_scalactic_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_compatible_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_core_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_diagrams_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_featurespec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_flatspec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_freespec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_funspec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_funsuite_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_matchers_core_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_mustmatchers_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_propspec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_refspec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_shouldmatchers_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/sbt__org_scalatest_scalatest_wordspec_3_3_2_15_jar.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/scala-assignment-build.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules/scala-assignment.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/sbt.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/scala_compiler.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/scala_settings.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/build.sbt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/project/build.properties" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/application.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/resources/static/movies.csv" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/exception/BaseException.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/exception/ServiceException.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/exception/UtilException.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/main.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/model/Movie.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/service/MovieServiceImpl.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/traits/MovieService.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/util/Constants.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/scala/util/MovieReader.scala" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/scala/service/MovieServiceImplTest.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="scala-assignment" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="scala-assignment" type="f1a62948:ProjectNode" />
                <item name="scala-assignment" type="2d1252cf:ModuleNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
        <option value="ScalaTest Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="2OaXTBHKVkZittyubuj3YVneAjs" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "ScalaTest",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.ScalaTest": "org.scalatest.FunSuite",
    "last_opened_file_path": "C:/Users/ssrivastavakumar/Desktop/scala-assignment/src/main/resources/static"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\ssrivastavakumar\Desktop\scala-assignment\src\main\resources\static" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\ssrivastavakumar\Desktop\scala-assignment\src\main\scala" />
      <recent name="C:\Users\ssrivastavakumar\Desktop\scala-assignment\src\main\resources" />
      <recent name="C:\Users\ssrivastavakumar\Desktop\scala-assignment\src" />
      <recent name="C:\Users\ssrivastavakumar\Desktop\scala-assignment\src\main" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="org.scalatest.FunSuite" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="service" />
    </key>
  </component>
  <component name="RunManager" selected="Application.main">
    <configuration name="main" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="main" />
      <module name="scala-assignment" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MovieServiceImplTest" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="scala-assignment" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="MovieServiceImplTest" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MovieServiceImplTest.test getHighestBudgetTitles" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="scala-assignment" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="MovieServiceImplTest" />
      <option name="testName" value="test getHighestBudgetTitles" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MovieServiceImplTest.test getLanguageWistReport when budgetRange is null" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="scala-assignment" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="MovieServiceImplTest" />
      <option name="testName" value="test getLanguageWistReport when budgetRange is null" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MovieServiceImplTest.test getLongestDurationTitles" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="scala-assignment" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="MovieServiceImplTest" />
      <option name="testName" value="test getLongestDurationTitles" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.main" />
        <item itemvalue="ScalaTest.MovieServiceImplTest" />
        <item itemvalue="ScalaTest.MovieServiceImplTest.test getHighestBudgetTitles" />
        <item itemvalue="ScalaTest.MovieServiceImplTest.test getLongestDurationTitles" />
        <item itemvalue="ScalaTest.MovieServiceImplTest.test getLanguageWistReport when budgetRange is null" />
      </list>
    </recent_temporary>
  </component>
  <component name="ScalaProjectSettings">
    <option name="scala3DisclaimerShown" value="true" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="46873323-de5a-472f-9479-fd43c87d5baa" name="Changes" comment="" />
      <created>1681799673954</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1681799673954</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/scala_assignment$MovieServiceImplTest.ic" NAME="MovieServiceImplTest Coverage Results" MODIFIED="1681935787106" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>